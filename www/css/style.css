/* Empty. Add your own CSS if you like */

@font-face {
    font-family: 'fabrica';
    src: url('../fonts/Fabrica.ttf.eot'); /* IE9 Compat Modes */
    src: url('../fonts/Fabrica.ttf.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
    url('../fonts/Fabrica.ttf.woff') format('woff'), /* Pretty Modern Browsers */
        /*url('fonts/fabrica.ttf')  format('truetype'), /!* Safari, Android, iOS *!/*/
    url('../fonts/Fabrica.ttf.svg#svgFontName') format('svg'); /* Legacy iOS */
}

* {
    font-family:'fabrica' !important;
}

html, body {
    height:100%;
    width:100%;
}


/* Form Controls */

.css-form input.ng-invalid.ng-touched {
    background-color: rgba(228, 32, 18, .01);
}

.css-form input.ng-valid.ng-touched {
    background-color: rgba(134, 247, 155, .02);
}
.css-form input.ng-valid.ng-pristine {
    background-color: #fff;
}

input[type="text"], input[type="password"], input[type="email"] {
    border-bottom: 1px solid gainsboro;
    width: 100%;
    min-width: 100%;
    margin: 0 0 1em 0;
    padding:2px;
}
input[readonly] {background:rgba(0,0,0,0);}
label {
    color: gray;
    font-weight: 700;
    width:100% !important;}

.center-container {
    height: 100vh!important;
    align-items: center;
    -webkit-align-items: center;
}

.w90 {width:90%!important; min-width:90%!important;}
.w80 {width:80%!important; min-width:80%!important;}
.w100 {width: 100vm !important; width:100%!important; min-width:100%!important;}
.float-left {float:left}


/* FLEX */

.flex1 {
    flex: 0 0 100px;
    -webkit-flex: 0 0 100px;
}
.flex2 {
    flex: 0 0 200px;
    -webkit-flex: 0 0 200px;
}
.flex3 {
    flex: 0 0 300px;
    -webkit-flex: 0 0 300px;
}
.flex4 {
    flex: 0 0 300px;
    -webkit-flex: 0 0 300px;
}
.flex-column {
    height:100%;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-align-content: flex-start;
    -ms-flex-line-pack: start;
    align-content: flex-start;

}
.flex-row {
    width:100%;
    min-width:100%;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: flex-start;
}

.start {
    align-self: flex-start!important;
    -webkit-align-self: flex-start!important;
}

.end {
    justify-content: flex-end;
    -webkit-justify-content: flex-end;

}
.between {
    justify-content: space-between;
    -webkit-justify-content: space-between;
}
.center {
    justify-content: center;
    -webkit-justify-content: center;
}
.h-center {
    align-items: center;
    -webkit-align-items: center;
}

.button.button-assertive {
    border-color: rgba(112, 17, 43, 1);
    background-color: rgba(112, 17, 43, 1);
    color: #fff;
}

.button.button-assertive.button-clear {
    color: rgba(112, 17, 43, 1);
}


/* Motion */

/* Have to set height explicity on ui-view
to prevent collapsing during animation*/
.ui-view-container {
    position: relative;
    height: 100%;
}

ui-view.ng-enter, ui-view.ng-leave {
    position: absolute;
    left: 0;
    right: 0;
    -webkit-transition:all .5s ease-in-out;
    -moz-transition:all .5s ease-in-out;
    -o-transition:all .5s ease-in-out;
    transition:all .5s ease-in-out;
}

ui-view.ng-enter {
    opacity: 0;
    -webkit-transform:scale3d(0.5, 0.5, 0.5);
    -moz-transform:scale3d(0.5, 0.5, 0.5);
    transform:scale3d(0.5, 0.5, 0.5);
}

ui-view.ng-enter-active {
    opacity: 1;
    -webkit-transform:scale3d(1, 1, 1);
    -moz-transform:scale3d(1, 1, 1);
    transform:scale3d(1, 1, 1);
}

ui-view.ng-leave {
    opacity: 1;
    -webkit-transform:translate3d(0, 0, 0);
    -moz-transform:translate3d(0, 0, 0);
    transform:translate3d(0, 0, 0);
}

ui-view.ng-leave-active {
    opacity: 0;
    -webkit-transform:translate3d(100px, 0, 0);
    -moz-transform:translate3d(100px, 0, 0);
    transform:translate3d(100px, 0, 0);
}

