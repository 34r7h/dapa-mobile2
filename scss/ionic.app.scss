/*
To customize the look and feel of Ionic, you can override the variables
in ionic's _variables.scss file.

For example, you might change some of the default colors:

$light:                           #fff !default;
$stable:                          #f8f8f8 !default;
$positive:                        #387ef5 !default;
$calm:                            #11c1f3 !default;
$balanced:                        #33cd5f !default;
$energized:                       #ffc900 !default;
$assertive:                       #ef473a !default;
$royal:                           #886aea !default;
$dark:                            #444 !default;
*/

// The path for our ionicons font files, relative to the built CSS in www/css
$ionicons-font-path: "../lib/ionic/fonts" !default;

// Include all of Ionic

$assertive: #70112b !default; // primary burgundy color override

@import "www/lib/ionic/scss/ionic";

@font-face {
  font-family: 'fabrica';
  src: url('../fonts/Fabrica.ttf.eot'); /* IE9 Compat Modes */
  src: url('../fonts/Fabrica.ttf.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
  url('../fonts/Fabrica.ttf.woff') format('woff'), /* Pretty Modern Browsers */
    /*url('fonts/fabrica.ttf')  format('truetype'), /!* Safari, Android, iOS *!/*/
  url('../fonts/Fabrica.ttf.svg#svgFontName') format('svg'); /* Legacy iOS */
}

* {
  font-family:'fabrica' !important;
  -webkit-font-smoothing: subpixel-antialiased !important;
}

html, body {
  height:100%;
  width:100%;
}


/* Form Controls */

.css-form input.ng-invalid.ng-touched {
  background-color: rgba(228, 32, 18, .01);
}

.css-form input.ng-valid.ng-touched {
  background-color: rgba(134, 247, 155, .02);
}
.css-form input.ng-valid.ng-pristine {
  background-color: #fff;
}

input[type="text"], input[type="password"], input[type="email"], input[type="tel"], input[type="number"], input[type="date"]  {
  border-bottom: 1px solid gainsboro;
  width: 100%;
  min-width: 100%;
  margin: 0 0 1em 0;
  padding:2px;
}
input[readonly], input:disabled {background:rgba(0,0,0,0);}



label {
  color: gray;
  font-weight: 700;
  width:100% !important;}



.button.button-assertive {
  border-color: rgba(112, 17, 43, 1);
  background-color: rgba(112, 17, 43, 1);
  color: #fff;
}

.button.button-assertive.button-clear {
  color: rgba(112, 17, 43, 1);
}
.button.button-assertive.button-clear:disabled {
  color: rgba(153, 152, 151, 1)!important;
}

button, .button {
  border-radius: 5px !important;
  font-weight:700;
}

button:active.primary , button:focus.primary   {
  background-color: rgba(119, 18, 45, 1);
  border-color: rgba(112, 17, 43, 1);

}

button:disabled.primary {
  opacity:1!important;
  background-color: rgba(153, 152, 151, .99)!important;
  border-color: rgba(153, 152, 151, 1)!important;
}

/* Utility Classes */

.modal {
  background: rgba(245, 245, 245, 1);
  border-radius: 5px;
  position: relative;
}

.modal-light {
  position: absolute; z-index: 100; top:0; background: white;
}
.modal-dark {
  position: absolute; z-index: 100; top:0; background: rgba(0,0,0,.7);
}

.center-container {
  height: 100vh!important;
  align-items: center;
  -webkit-align-items: center;
}

.w50 {width:50%!important; min-width:50%!important;}
.w60 {width:60%!important; min-width:60%!important;}
.w80 {width:80%!important; min-width:80%!important;}
.w90 {width:90%!important; min-width:90%!important;}
.w100 {width: 100vw !important; width:100%!important; min-width:100%!important;}
.float-left {float:left}

.h50 {height:50%!important; min-height:50%!important;}
.h50 {height:60%!important; min-height:60%!important;}
.h80 {height:80%!important; min-height:80%!important;}
.h90 {height:90%!important; min-height:90%!important;}
.h100 {height: 100vw !important; height:100%!important; min-height:100%!important;}

.icon-stack {
  font-size: 20px !important;
  display:block !important;
  width: 30px !important;
  height: 30px !important;
  text-align:center !important;
  i{
    position: absolute !important;
    left: 0 !important;
    right: 0 !important;
  }
  i:first-child {
    font-size: 2em;
    bottom: 28px;
  }
}

/* FLEX */

.flex1 {
  flex: 0 0 100px;
  -webkit-flex: 0 0 100px;
}
.flex2 {
  flex: 0 0 200px;
  -webkit-flex: 0 0 200px;
}
.flex3 {
  flex: 0 0 300px;
  -webkit-flex: 0 0 300px;
}
.flex4 {
  flex: 0 0 300px;
  -webkit-flex: 0 0 300px;
}
.flex-column {
  height:100%;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;

}
.flex-row {
  width:100%;
  min-width:100%;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: flex-start;
}

.start {
  align-self: flex-start!important;
  -webkit-align-self: flex-start!important;
}

.end {
  justify-content: flex-end;
  -webkit-justify-content: flex-end;

}
.between {
  justify-content: space-between;
  -webkit-justify-content: space-between;
}
.around {
  justify-content: space-around;
  -webkit-justify-content: space-around;
}
.center {
  justify-content: center;
  -webkit-justify-content: center;
}
.h-center {
  align-items: center;
  -webkit-align-items: center;
}


/* Motion */

/* Have to set height explicity on ui-view
to prevent collapsing during animation*/
.ui-view-container {
  position: relative;
  height: 100%;
}

ui-view .ng-enter {
  position: absolute;
  left: 0;
  right: 0;
  -webkit-transition:all .5s ease-in-out;
  -moz-transition:all .5s ease-in-out;
  -o-transition:all .5s ease-in-out;
  transition:all .5s ease-in-out;
}
ui-view .ng-leave {
  position: absolute;
  left: 0;
  right: 0;
  -webkit-transition:all .5s ease-in-out;
  -moz-transition:all .5s ease-in-out;
  -o-transition:all .5s ease-in-out;
  transition:all .5s ease-in-out;
}

ui-view .ng-enter {
  opacity: 0;
  -webkit-transform:translateX(100%);
  -moz-transform:translateX(100%);
  transform:translateX(100%);
}

ui-view .ng-enter-active {
  opacity: 1;
  -webkit-transform:translateX(0px);
  -moz-transform:translateX(0px);
  transform:translateX(0px);
}

ui-view .ng-leave {
  opacity: 1;
  -webkit-transform:translate3d(0, 0, 0);
  -moz-transform:translate3d(0, 0, 0);
  transform:translate3d(0, 0, 0);
}

ui-view .ng-leave-active {
  opacity: 1;
  -webkit-transform:translateX(-100%);
  -moz-transform:translateX(-100%);
  transform:translateX(-100%);
}

.back > ui-view.ng-leave-active {
  opacity: 1;
  -webkit-transform:translateX(100%);
  -moz-transform:translateX(100%);
  transform:translateX(100%);
}

.back > ui-view .ng-leave {
  opacity: 1;
  -webkit-transform:translate3d(0, 0, 0);
  -moz-transform:translate3d(0, 0, 0);
  transform:translate3d(0, 0, 0);
}

.back > ui-view.ng-enter-active {
  opacity: 1;
  -webkit-transform:translateX(100%);
  -moz-transform:translateX(100%);
  transform:translateX(100%);
}
.back > ui-view.ng-enter {
  opacity: 1;
  -webkit-transform:translateX(100%);
  -moz-transform:translateX(100%);
  transform:translateX(100%);
}

.ng-hide-add {
  transition: all linear 0.3s;
}
.ng-hide-remove {
  transition: all linear 0.3s;
}

.ng-hide {
  line-height: 0;
  opacity: 0;
  height:0;
  position: relative;
}